1.Count the number of vaccined and not-vaccined persons ?
reponse:
        prefix ext: <http://fr.extention/univ-gus.fr#>
        select distinct ?s where {?s rdf:type ?o.
                                FILTER regex(str(?o), "FullProfessor|GraduateStudent|UndergraduateStudent|AssistantProfessor|AssociateProfessor").
                                {select ?s  where {
                                  		?s ext:vaccine ?k
                                                }
                                        }
                                }

        prefix ext: <http://fr.extention/univ-gus.fr#>
        select distinct ?s where {?s rdf:type ?o.
                                FILTER regex(str(?o), "FullProfessor|GraduateStudent|UndergraduateStudent|AssistantProfessor|AssociateProfessor").
                                {select ?s  where {
                                  		FILTER NOT exists {?s ext:vaccine ?k}
                                                }
                                        }
                                }

2. For the vaccined persons, retrieve the number of individuals
   in each vaccine group where a group corresponds to the set of
   persons vaccined with the same drug (right now, you should have
   5 groups since we have 5 vaccines ?
reponse:

prefix ext: <http://fr.extention/univ-gus.fr#>
select distinct ?k ?vas  where {?s rdf:type ?o.
                        FILTER regex(str(?o), "FullProfessor|GraduateStudent|UndergraduateStudent|AssistantProfessor|AssociateProfessor").
                        {select ?s ?k  where {
                            ?s ext:vaccine ?k
                                }
                        }
                        { select ?k (count(?s) as ?vas) where{
                           ?s ext:vaccine ?k
                         }group by ?k
                         }

                   }
3.Write a query that retrieves AssociateProfessors that work for an
  organization that is a Department and who teach a course. Using the “Explain”
  advanced features in the Query Query tab, interpret the provided query plan.
reponse:
prefix ben: <http://swat.cse.lehigh.edu/onto/univ-bench.owl#>
prefix ext: <http://fr.extention/univ-gus.fr#>
select distinct ?s where {?s rdf:type ?o.
                        FILTER regex(str(?o), "AssociateProfessor").
                        {select ?s  where {
                          FILTER exists {?s ben:teacherOf ?k }.
                          FILTER exists {?s ben:worksFor ?k }.
                           FILTER exists {?s ext:vaccine ?k }
                                       }
                                }
                        }

TD5 Requetes
1.
PREFIX j.0: <http://swat.cse.lehigh.edu/onto/univ-bench.owl#>

SELECT DISTINCT ?ln ?fn where {
  ?s j.0:name ?name .
  ?s rdf:firstName ?fn .
  ?s rdf:lastName ?ln .
  FILTER (contains(str(?name),"FullProfessor") || contains(str(?name),"AssociateProfessor"))
}

2.
  PREFIX j.0: <http://swat.cse.lehigh.edu/onto/univ-bench.owl#>
  SELECT DISTINCT ?fn ?ln ?fname where {

    ?s j.0:name ?fname .
    ?s rdf:firstName ?fn .
    ?s rdf:lastName ?ln .
    FILTER contains(str(?ao),str(?fname))
    {
          SELECT DISTINCT ?ao where {
              ?s j.0:name ?name .
              ?s j.0:advisor ?ao .
            	FILTER contains(str(?name),"Student")
              FILTER (contains(str(?ao),"FullProfessor") || contains(str(?ao),"AssociateProfessor"))
          }

      }
  }
3.
PREFIX j.0: <http://swat.cse.lehigh.edu/onto/univ-bench.owl#>
SELECT DISTINCT ?fn ?ln ?name where {

  ?s j.0:name ?name .
  ?s rdf:firstName ?fn .
  ?s rdf:lastName ?ln .
  ?s j.0:worksFor ?wf .
  FILTER (contains(str(?name),"FullProfessor") || contains(str(?name),"AssociateProfessor"))
  FILTER(!isBlank(?wf))

}

4.
PREFIX j.0: <http://swat.cse.lehigh.edu/onto/univ-bench.owl#>

SELECT DISTINCT ?fn ?ln ?fname where {

  ?s j.0:name ?fname .
  ?s rdf:firstName ?fn .
  ?s rdf:lastName ?ln .
  ?s j.0:worksFor ?wf .
  FILTER(!isBlank(?wf))
  FILTER contains(str(?ao),str(?fname))
  {
        SELECT DISTINCT ?ao where {
            ?s j.0:name ?name .
            ?s j.0:advisor ?ao .
          	FILTER contains(str(?name),"Student")
            FILTER (contains(str(?ao),"FullProfessor") || contains(str(?ao),"AssociateProfessor"))
        }

    }
}

5.
In a non-inference Blazegraph configuration, rewrite the queries 3.2, 3.3 and 3.4 in such a way that it produces
the same answer set as its respective original query.

Les réponses de requêtes sont beaucoup plus rapide sans inférence.